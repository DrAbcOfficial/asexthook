<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta name="generator" content="ASDocGenerator 1.1">
	<meta name="description" content="File class.">
	<meta property="og:title" content="File">
	<meta property="og:description" content="File class.">
	<meta property="og:type" content="website">
	<meta property="og:image" content="https://github.com/baso88/SC_AngelScript/wiki/images/sc_as_logo_media.png">
	<meta property="og:site_name" content="Sven Co-op AngelScript API">
	<link rel="stylesheet" type="text/css" href="doc.css">
	<title>File</title>
</head>
<body>
	<h1>File</h1>
	<p>File class.<br>Is used to read from/write to files in disk.</p>
	<p><b>Type:</b> Reference type</p>
	<div><h2>Methods</h2>
	<table>
		<tr>
			<th>Declaration</th>
			<th>Description</th>
		</tr>
		<tr>
			<td>bool IsOpen() const</td>
			<td>Returns whether the file was successfully opened.</td>
		</tr>
		<tr>
			<td>void Close()</td>
			<td>Closes the file if it is open.</td>
		</tr>
		<tr>
			<td>void Remove()</td>
			<td>Removes the file. The file must be open, and you must have write access.</td>
		</tr>
		<tr>
			<td>size_t GetSize() const</td>
			<td>Returns the size of the file.</td>
		</tr>
		<tr>
			<td>size_t Tell() const</td>
			<td>Tells the position of the read/write pointer.</td>
		</tr>
		<tr>
			<td>size_t Seek(const size_t uiPosition, const SeekFileFlags_t uiSeekMode)</td>
			<td>Sets the read/write pointer to a new position. Returns the new position within the file.</td>
		</tr>
		<tr>
			<td>bool EOFReached() const</td>
			<td>Returns whether end of file was reached.</td>
		</tr>
		<tr>
			<td>string ReadCharacter()</td>
			<td>Reads a single character.</td>
		</tr>
		<tr>
			<td>void ReadLine(string& out szOutLine, const string& in szDelim = '<br>')</td>
			<td>Reads a line from the file.</td>
		</tr>
		<tr>
			<td>bool Read(BLOB@ pBlob, size_t uiSizeInBytes)</td>
			<td>Reads a number of bytes into the given BLOB.</td>
		</tr>
		<tr>
			<td>bool Read(BLOB@ pBlob)</td>
			<td>Reads as much as possible data into the given BLOB.</td>
		</tr>
		<tr>
			<td>BLOB@ ReadBlob(size_t uiSizeInBytes, bool fCanResize = true)</td>
			<td>Reads a number of bytes into a BLOB.</td>
		</tr>
		<tr>
			<td>BLOB@ ReadBlob()</td>
			<td>Reads as much as possible data into a BLOB.</td>
		</tr>
		<tr>
			<td>void Write(const string& in szString)</td>
			<td>Writes a string to the file.</td>
		</tr>
		<tr>
			<td>void Write(const BLOB@ pBlob)</td>
			<td>Writes a blob to the file.</td>
		</tr>
	</table>
	</div>
</body>
</html>
