<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta name="generator" content="ASDocGenerator 1.1">
	<meta name="description" content="Classic Mode handler">
	<meta property="og:title" content="CClassicMode">
	<meta property="og:description" content="Classic Mode handler">
	<meta property="og:type" content="website">
	<meta property="og:image" content="https://github.com/baso88/SC_AngelScript/wiki/images/sc_as_logo_media.png">
	<meta property="og:site_name" content="Sven Co-op AngelScript API">
	<link rel="stylesheet" type="text/css" href="doc.css">
	<title>CClassicMode</title>
</head>
<body>
	<h1>CClassicMode</h1>
	<p>Classic Mode handler</p>
	<p><b>Type:</b> Reference type</p>
	<div><h2>Methods</h2>
	<table>
		<tr>
			<th>Declaration</th>
			<th>Description</th>
		</tr>
		<tr>
			<td>bool IsStateDefined() const</td>
			<td>Returns whether the Classic Mode state setting is defined. If not defined, no voting has taken place to choose whether or not to enable Classic Mode.</td>
		</tr>
		<tr>
			<td>void ResetState()</td>
			<td>Resets the Classic Mode state setting to undefined.</td>
		</tr>
		<tr>
			<td>bool IsEnabled() const</td>
			<td>Returns whether Classic Mode is enabled or not.</td>
		</tr>
		<tr>
			<td>void SetEnabled(const bool fEnabled)</td>
			<td>Enable or disable Classic Mode.</td>
		</tr>
		<tr>
			<td>void ForceItemRemap(const bool fEnabled)</td>
			<td>Forces item remapping even if classic mode is disabled.</td>
		</tr>
		<tr>
			<td>void Toggle()</td>
			<td>Toggles Classic Mode.</td>
		</tr>
		<tr>
			<td>void EnableMapSupport()</td>
			<td>Tells the game that the current map wants to use Classic Mode. Must be called in MapInit. Cannot be disabled once set.This will ask players whether they want to enable Classic Mode. Reset on map change.</td>
		</tr>
		<tr>
			<td>bool ShouldRestartOnChange() const</td>
			<td>Returns whether the map should restart if Classic Mode is changed or not. Defaults to true if not changed by a script. Reset on map change.</td>
		</tr>
		<tr>
			<td>void SetShouldRestartOnChange(const bool bShouldRestart)</td>
			<td>Sets whether the map should restart if Classic Mode is changed.</td>
		</tr>
		<tr>
			<td>void SetItemMappings(array&lt;ItemMapping@&gt;@ pItemMappings)</td>
			<td>Sets the item mappings to use from now on.<br>Does not affect previous mappings.<br>Pass null to disable all mappings.</td>
		</tr>
		<tr>
			<td>const string& FindItemMapping(const string& in szItemName) const</td>
			<td>Gets the item mapped to the given item name, or an empty string if no mapping exists.</td>
		</tr>
	</table>
	</div>
</body>
</html>
