<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta name="generator" content="ASDocGenerator 1.1">
	<meta name="description" content="Engine global variables">
	<meta property="og:title" content="CEngine">
	<meta property="og:description" content="Engine global variables">
	<meta property="og:type" content="website">
	<meta property="og:image" content="https://github.com/baso88/SC_AngelScript/wiki/images/sc_as_logo_media.png">
	<meta property="og:site_name" content="Sven Co-op AngelScript API">
	<link rel="stylesheet" type="text/css" href="doc.css">
	<title>CEngine</title>
</head>
<body>
	<h1>CEngine</h1>
	<p>Engine global variables</p>
	<p><b>Type:</b> Reference type</p>
	<div><h2>Properties</h2>
	<table>
		<tr>
			<th>Declaration</th>
			<th>Description</th>
		</tr>
		<tr>
			<td>const float time</td>
			<td>Current time</td>
		</tr>
		<tr>
			<td>const float frametime</td>
			<td>Time between frames</td>
		</tr>
		<tr>
			<td>float force_retouch</td>
			<td>How many times to force all entities to retouch entities they are currently touching/intersecting. Should always be &gt;= 0.</td>
		</tr>
		<tr>
			<td>const string_t mapname</td>
			<td>Name of the current map</td>
		</tr>
		<tr>
			<td>const string_t startspot</td>
			<td>Start location in the map</td>
		</tr>
		<tr>
			<td>float deathmatch</td>
			<td>Flag telling whether this is deathmatch</td>
		</tr>
		<tr>
			<td>float coop</td>
			<td>Flag telling whether this is coop</td>
		</tr>
		<tr>
			<td>float teamplay</td>
			<td>Flag telling whether this is teamplay</td>
		</tr>
		<tr>
			<td>const float serverflags</td>
			<td>Server flags</td>
		</tr>
		<tr>
			<td>float found_secrets</td>
			<td>Found secrets</td>
		</tr>
		<tr>
			<td>const Vector v_forward</td>
			<td>Forward vector</td>
		</tr>
		<tr>
			<td>const Vector v_up</td>
			<td>Up vector</td>
		</tr>
		<tr>
			<td>const Vector v_right</td>
			<td>Right vector</td>
		</tr>
		<tr>
			<td>const float trace_allsolid</td>
			<td>Trace all is solid flag</td>
		</tr>
		<tr>
			<td>const float trace_startsolid</td>
			<td>Trace start is solid flag</td>
		</tr>
		<tr>
			<td>const float trace_fraction</td>
			<td>Trace fraction</td>
		</tr>
		<tr>
			<td>const Vector trace_endpos</td>
			<td>Trace end position</td>
		</tr>
		<tr>
			<td>const Vector trace_plane_normal</td>
			<td>Trace plane normal</td>
		</tr>
		<tr>
			<td>const float trace_plane_dist</td>
			<td>Trace plane distance</td>
		</tr>
		<tr>
			<td>const edict_t@ trace_ent</td>
			<td>Trace entity</td>
		</tr>
		<tr>
			<td>const float trace_inopen</td>
			<td>Trace is in open flag</td>
		</tr>
		<tr>
			<td>const float trace_inwater</td>
			<td>Trace is in water flag</td>
		</tr>
		<tr>
			<td>const int trace_hitgroup</td>
			<td>Trace hit group</td>
		</tr>
		<tr>
			<td>const int trace_flags</td>
			<td>Trace flags</td>
		</tr>
		<tr>
			<td>const int msg_entity</td>
			<td>Message entity</td>
		</tr>
		<tr>
			<td>int cdAudioTrack</td>
			<td>CD audio track</td>
		</tr>
		<tr>
			<td>const int maxClients</td>
			<td>Maximum connected clients</td>
		</tr>
		<tr>
			<td>const int maxEntities</td>
			<td>Maximum entities</td>
		</tr>
	</table>
	</div>
</body>
</html>
