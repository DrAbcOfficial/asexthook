<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta name="generator" content="ASDocGenerator 1.1">
	<meta name="description" content="Network message class. Used to send messages to clients.">
	<meta property="og:title" content="NetworkMessage">
	<meta property="og:description" content="Network message class. Used to send messages to clients.">
	<meta property="og:type" content="website">
	<meta property="og:image" content="https://github.com/baso88/SC_AngelScript/wiki/images/sc_as_logo_media.png">
	<meta property="og:site_name" content="Sven Co-op AngelScript API">
	<link rel="stylesheet" type="text/css" href="doc.css">
	<title>NetworkMessage</title>
</head>
<body>
	<h1>NetworkMessage</h1>
	<p>Network message class. Used to send messages to clients.</p>
	<p><b>Type:</b> Reference type</p>
	<div><h2>Methods</h2>
	<table>
		<tr>
			<th>Declaration</th>
			<th>Description</th>
		</tr>
		<tr>
			<td>NetworkMessage@ NetworkMessage(NetworkMessageDest dest, NetworkMessages::NetworkMessageType type, edict_t@ pEdict = null)</td>
			<td>Constructor</td>
		</tr>
		<tr>
			<td>NetworkMessage@ NetworkMessage(NetworkMessageDest dest, NetworkMessages::NetworkMessageType type, const Vector& in vecOrigin, edict_t@ pEdict = null)</td>
			<td>Constructor</td>
		</tr>
		<tr>
			<td>void End()</td>
			<td>Ends the message. Must be called to send the message.</td>
		</tr>
		<tr>
			<td>void WriteByte(uint8 byte)</td>
			<td>Writes a byte to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteChar(const string& in szChar)</td>
			<td>Writes a character to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteShort(int16 short)</td>
			<td>Writes a short to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteLong(int32 long)</td>
			<td>Writes a long to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteAngle(float flValue)</td>
			<td>Writes an angle to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteCoord(float flValue)</td>
			<td>Writes a coordinate to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteVector(const Vector& in vecVector)</td>
			<td>Writes a vector to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteString(const string& in szString)</td>
			<td>Writes a string to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteEntity(int iEntity)</td>
			<td>Writes an entity index to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteEntity(CBaseEntity@ pEntity)</td>
			<td>Writes an entity index to the buffer.</td>
		</tr>
		<tr>
			<td>void WriteFloat(float flValue)</td>
			<td>Writes a float to the buffer.</td>
		</tr>
	</table>
	</div>
</body>
</html>
