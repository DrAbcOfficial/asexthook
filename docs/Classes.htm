<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
	<meta name="generator" content="ASDocGenerator 1.1">
	<meta name="description" content="List of all documented classes with a brief descriptions of each.">
	<meta property="og:title" content="Classes">
	<meta property="og:description" content="List of all documented classes with a brief descriptions of each.">
	<meta property="og:type" content="website">
	<meta property="og:image" content="https://github.com/baso88/SC_AngelScript/wiki/images/sc_as_logo_media.png">
	<meta property="og:site_name" content="Sven Co-op AngelScript API">
	<link rel="stylesheet" type="text/css" href="doc.css">
	<title>Classes</title>
</head>
<body>
	<div><h1>Classes</h1>
	<p>List of all documented classes with a brief descriptions of each.</p>
	</div>
	<div><h2>Classes</h2>
	<table>
		<tr>
			<th>Name</th>
			<th>Description</th>
		</tr>
		<tr>
			<td><a href="string.htm">string</a>
			</td>
			<td>String type</td>
		</tr>
		<tr>
			<td><a href="char.htm">char</a>
			</td>
			<td>Char value type</td>
		</tr>
		<tr>
			<td><a href="string_t.htm">string_t</a>
			</td>
			<td>Opaque handle to a pooled string.</td>
		</tr>
		<tr>
			<td><a href="Arguments.htm">Arguments</a>
			</td>
			<td>This class can hold arguments for a function or method call.</td>
		</tr>
		<tr>
			<td><a href="ReturnValue.htm">ReturnValue</a>
			</td>
			<td>Reflection return value.</td>
		</tr>
		<tr>
			<td><a href="Callable.htm">Callable</a>
			</td>
			<td>Reflection base class for callable objects.</td>
		</tr>
		<tr>
			<td><a href="Function.htm">Function</a>
			</td>
			<td>Reflection function class. Can be used to call global functions.</td>
		</tr>
		<tr>
			<td><a href="Method.htm">Method</a>
			</td>
			<td>Reflection method class. Can be used to call object methods.</td>
		</tr>
		<tr>
			<td><a href="ObjectType.htm">ObjectType</a>
			</td>
			<td>Represents an object type</td>
		</tr>
		<tr>
			<td><a href="IReflectionGroup.htm">IReflectionGroup</a>
			</td>
			<td>Reflection group. Represents a group of reflectable objects.</td>
		</tr>
		<tr>
			<td><a href="CReflection.htm">CReflection</a>
			</td>
			<td>Reflection global used for generial purpose needs.</td>
		</tr>
		<tr>
			<td><a href="Regex.htm">Regex</a>
			</td>
			<td>Represents a regular expression</td>
		</tr>
		<tr>
			<td><a href="SubMatch.htm">SubMatch</a>
			</td>
			<td>Regular expression submatch</td>
		</tr>
		<tr>
			<td><a href="MatchResults.htm">MatchResults</a>
			</td>
			<td>Regular expression match results</td>
		</tr>
		<tr>
			<td><a href="BLOB.htm">BLOB</a>
			</td>
			<td>Binary Large OBject class used for storing arbitrary amounts of binary data.</td>
		</tr>
		<tr>
			<td><a href="File.htm">File</a>
			</td>
			<td>File class.</td>
		</tr>
		<tr>
			<td><a href="FileQuota.htm">FileQuota</a>
			</td>
			<td>Represents a quota that filesystems adhere to when handling write operations.</td>
		</tr>
		<tr>
			<td><a href="CVirtualFileSystem.htm">CVirtualFileSystem</a>
			</td>
			<td>Virtual File System</td>
		</tr>
		<tr>
			<td><a href="CScheduledFunction.htm">CScheduledFunction</a>
			</td>
			<td>Handle to a scheduled function</td>
		</tr>
		<tr>
			<td><a href="CScheduler.htm">CScheduler</a>
			</td>
			<td>Scheduler for calling functions.</td>
		</tr>
		<tr>
			<td><a href="CDebugger.htm">CDebugger</a>
			</td>
			<td>Debugger</td>
		</tr>
		<tr>
			<td><a href="Vector2D.htm">Vector2D</a>
			</td>
			<td>2D Vector</td>
		</tr>
		<tr>
			<td><a href="Vector.htm">Vector</a>
			</td>
			<td>3D Vector</td>
		</tr>
		<tr>
			<td><a href="CMath.htm">CMath</a>
			</td>
			<td>Math functions</td>
		</tr>
		<tr>
			<td><a href="edict_t.htm">edict_t</a>
			</td>
			<td>Entity dictionary structure</td>
		</tr>
		<tr>
			<td><a href="entvars_t.htm">entvars_t</a>
			</td>
			<td>Networked entity variables</td>
		</tr>
		<tr>
			<td><a href="CDecals.htm">CDecals</a>
			</td>
			<td>Dynamic decal manager</td>
		</tr>
		<tr>
			<td><a href="CBaseEntity.htm">CBaseEntity</a>
			</td>
			<td>All entities derive from this</td>
		</tr>
		<tr>
			<td><a href="CBaseDelay.htm">CBaseDelay</a>
			</td>
			<td>All entities that can trigger with a delay derive from this</td>
		</tr>
		<tr>
			<td><a href="CBaseAnimating.htm">CBaseAnimating</a>
			</td>
			<td>All entities that can animate derive from this</td>
		</tr>
		<tr>
			<td><a href="CBaseToggle.htm">CBaseToggle</a>
			</td>
			<td>All entities that can be toggled derive from this</td>
		</tr>
		<tr>
			<td><a href="CBasePlayerItem.htm">CBasePlayerItem</a>
			</td>
			<td>Player item base class</td>
		</tr>
		<tr>
			<td><a href="CBasePlayerWeapon.htm">CBasePlayerWeapon</a>
			</td>
			<td>Player Weapon entity base class</td>
		</tr>
		<tr>
			<td><a href="CBasePlayerAmmo.htm">CBasePlayerAmmo</a>
			</td>
			<td>Player ammo class</td>
		</tr>
		<tr>
			<td><a href="CItemInventory.htm">CItemInventory</a>
			</td>
			<td>Item_inventory entity class</td>
		</tr>
		<tr>
			<td><a href="CItem.htm">CItem</a>
			</td>
			<td>Generic item class</td>
		</tr>
		<tr>
			<td><a href="CGrenade.htm">CGrenade</a>
			</td>
			<td>Grenade class</td>
		</tr>
		<tr>
			<td><a href="CBaseMonster.htm">CBaseMonster</a>
			</td>
			<td>Monster entity base class</td>
		</tr>
		<tr>
			<td><a href="CCineMonster.htm">CCineMonster</a>
			</td>
			<td>Cinematic monster entity base class</td>
		</tr>
		<tr>
			<td><a href="CBasePlayer.htm">CBasePlayer</a>
			</td>
			<td>Player entity base class</td>
		</tr>
		<tr>
			<td><a href="CSprite.htm">CSprite</a>
			</td>
			<td>Sprite class</td>
		</tr>
		<tr>
			<td><a href="CPathTrack.htm">CPathTrack</a>
			</td>
			<td>Path track class</td>
		</tr>
		<tr>
			<td><a href="CBeam.htm">CBeam</a>
			</td>
			<td>Beam class</td>
		</tr>
		<tr>
			<td><a href="CLaser.htm">CLaser</a>
			</td>
			<td>Laser class</td>
		</tr>
		<tr>
			<td><a href="CBaseTank.htm">CBaseTank</a>
			</td>
			<td>Tank base class</td>
		</tr>
		<tr>
			<td><a href="CPathCondition.htm">CPathCondition</a>
			</td>
			<td>Path condition entity</td>
		</tr>
		<tr>
			<td><a href="CBaseButton.htm">CBaseButton</a>
			</td>
			<td>Button entity base class</td>
		</tr>
		<tr>
			<td><a href="CBaseDoor.htm">CBaseDoor</a>
			</td>
			<td>Door entity base class</td>
		</tr>
		<tr>
			<td><a href="CGib.htm">CGib</a>
			</td>
			<td>Gib class</td>
		</tr>
		<tr>
			<td><a href="EHandle.htm">EHandle</a>
			</td>
			<td>Safe way to point to CBaseEntities who may die between frames.</td>
		</tr>
		<tr>
			<td><a href="CustomKeyvalue.htm">CustomKeyvalue</a>
			</td>
			<td>Custom keyvalue. Only use this as a local variable, do not store them!</td>
		</tr>
		<tr>
			<td><a href="CustomKeyvalues.htm">CustomKeyvalues</a>
			</td>
			<td>Custom keyvalues. Do not keep handles to instances of these objects.</td>
		</tr>
		<tr>
			<td><a href="CActivityMap.htm">CActivityMap</a>
			</td>
			<td>Activity map</td>
		</tr>
		<tr>
			<td><a href="Task.htm">Task</a>
			</td>
			<td>Task for monsters to execute.</td>
		</tr>
		<tr>
			<td><a href="Schedule.htm">Schedule</a>
			</td>
			<td>Schedule for monsters to follow.</td>
		</tr>
		<tr>
			<td><a href="ScriptTask.htm">ScriptTask</a>
			</td>
			<td>Script task class</td>
		</tr>
		<tr>
			<td><a href="ScriptSchedule.htm">ScriptSchedule</a>
			</td>
			<td>Script schedule class</td>
		</tr>
		<tr>
			<td><a href="Waypoint.htm">Waypoint</a>
			</td>
			<td>Waypoint for monsters to follow.</td>
		</tr>
		<tr>
			<td><a href="MonsterEvent.htm">MonsterEvent</a>
			</td>
			<td>Monster event type</td>
		</tr>
		<tr>
			<td><a href="Observer.htm">Observer</a>
			</td>
			<td>Observer mode management class.</td>
		</tr>
		<tr>
			<td><a href="TraceResult.htm">TraceResult</a>
			</td>
			<td>Trace result structure</td>
		</tr>
		<tr>
			<td><a href="DamageInfo.htm">DamageInfo</a>
			</td>
			<td>Damage info structure</td>
		</tr>
		<tr>
			<td><a href="Cvar.htm">Cvar</a>
			</td>
			<td>Cvar structure</td>
		</tr>
		<tr>
			<td><a href="KeyValueBuffer.htm">KeyValueBuffer</a>
			</td>
			<td>Buffer containing keyvalue pairs</td>
		</tr>
		<tr>
			<td><a href="CEngineFuncs.htm">CEngineFuncs</a>
			</td>
			<td>Engine functions</td>
		</tr>
		<tr>
			<td><a href="CModelFuncs.htm">CModelFuncs</a>
			</td>
			<td>Model functions</td>
		</tr>
		<tr>
			<td><a href="CSound.htm">CSound</a>
			</td>
			<td>Sound class used by CSoundEnt</td>
		</tr>
		<tr>
			<td><a href="CSoundEnt.htm">CSoundEnt</a>
			</td>
			<td>Sound manager entity. Manages sound events made in the world, like gunfire.</td>
		</tr>
		<tr>
			<td><a href="InventoryRules.htm">InventoryRules</a>
			</td>
			<td>Inventory rules: Contained by CBaseToggle to hold and</td>
		</tr>
		<tr>
			<td><a href="InventoryList.htm">InventoryList</a>
			</td>
			<td>Structure for a list of item_inventory's stored within CBaseMonster</td>
		</tr>
		<tr>
			<td><a href="CInventoryMisc.htm">CInventoryMisc</a>
			</td>
			<td>Misc functions for handling inventories across classes</td>
		</tr>
		<tr>
			<td><a href="ItemInfo.htm">ItemInfo</a>
			</td>
			<td>Item info object.</td>
		</tr>
		<tr>
			<td><a href="CItemRegistry.htm">CItemRegistry</a>
			</td>
			<td>Item registry.</td>
		</tr>
		<tr>
			<td><a href="CEntityLoader.htm">CEntityLoader</a>
			</td>
			<td>Entity loader.</td>
		</tr>
		<tr>
			<td><a href="CustomEntityCallbackHandler.htm">CustomEntityCallbackHandler</a>
			</td>
			<td>Custom entity callback handler. Is used to set callbacks to methods</td>
		</tr>
		<tr>
			<td><a href="CCustomEntityFuncs.htm">CCustomEntityFuncs</a>
			</td>
			<td>Custom entity functions.</td>
		</tr>
		<tr>
			<td><a href="BaseEntity.htm">BaseEntity</a>
			</td>
			<td>Baseclass for CBaseEntity.</td>
		</tr>
		<tr>
			<td><a href="BaseMonster.htm">BaseMonster</a>
			</td>
			<td>Baseclass for CBaseMonster.</td>
		</tr>
		<tr>
			<td><a href="BaseTank.htm">BaseTank</a>
			</td>
			<td>Baseclass for CBaseTank.</td>
		</tr>
		<tr>
			<td><a href="BasePlayerItem.htm">BasePlayerItem</a>
			</td>
			<td>Baseclass for CBasePlayerItem.</td>
		</tr>
		<tr>
			<td><a href="BasePlayerWeapon.htm">BasePlayerWeapon</a>
			</td>
			<td>Baseclass for CBasePlayerWeapon.</td>
		</tr>
		<tr>
			<td><a href="BasePlayerAmmo.htm">BasePlayerAmmo</a>
			</td>
			<td>Baseclass for CBasePlayerAmmo.</td>
		</tr>
		<tr>
			<td><a href="BaseItem.htm">BaseItem</a>
			</td>
			<td>Baseclass for CItem.</td>
		</tr>
		<tr>
			<td><a href="CUtility.htm">CUtility</a>
			</td>
			<td>Utility methods</td>
		</tr>
		<tr>
			<td><a href="CGame.htm">CGame</a>
			</td>
			<td>Game functions</td>
		</tr>
		<tr>
			<td><a href="CSoundEngine.htm">CSoundEngine</a>
			</td>
			<td>Sound engine.</td>
		</tr>
		<tr>
			<td><a href="CEngine.htm">CEngine</a>
			</td>
			<td>Engine global variables</td>
		</tr>
		<tr>
			<td><a href="CEntityFuncs.htm">CEntityFuncs</a>
			</td>
			<td>Global entity functions</td>
		</tr>
		<tr>
			<td><a href="RGBA.htm">RGBA</a>
			</td>
			<td>Color stored as four uint8 components</td>
		</tr>
		<tr>
			<td><a href="HUDTextParams.htm">HUDTextParams</a>
			</td>
			<td>Parameters for text output to the HUD.</td>
		</tr>
		<tr>
			<td><a href="HUDSpriteParams.htm">HUDSpriteParams</a>
			</td>
			<td>Holds parameters for custom sprite.</td>
		</tr>
		<tr>
			<td><a href="HUDNumDisplayParams.htm">HUDNumDisplayParams</a>
			</td>
			<td>Holds parameters for custom numeric/time display.</td>
		</tr>
		<tr>
			<td><a href="CPlayerFuncs.htm">CPlayerFuncs</a>
			</td>
			<td>Global player functions</td>
		</tr>
		<tr>
			<td><a href="CWeaponFuncs.htm">CWeaponFuncs</a>
			</td>
			<td>Weapon functions class.</td>
		</tr>
		<tr>
			<td><a href="GlobalEntity.htm">GlobalEntity</a>
			</td>
			<td>Global state entity</td>
		</tr>
		<tr>
			<td><a href="CGlobalState.htm">CGlobalState</a>
			</td>
			<td>Global state manager</td>
		</tr>
		<tr>
			<td><a href="CAngelscript.htm">CAngelscript</a>
			</td>
			<td>Angelscript debugging functions</td>
		</tr>
		<tr>
			<td><a href="CMapCycle.htm">CMapCycle</a>
			</td>
			<td>Map cycle read only manager</td>
		</tr>
		<tr>
			<td><a href="CMap.htm">CMap</a>
			</td>
			<td>Map state variables</td>
		</tr>
		<tr>
			<td><a href="CPersistence.htm">CPersistence</a>
			</td>
			<td>Persistence manager</td>
		</tr>
		<tr>
			<td><a href="CPluginManager.htm">CPluginManager</a>
			</td>
			<td>Plugin manager for handling basic plugin operations</td>
		</tr>
		<tr>
			<td><a href="CStartInventory.htm">CStartInventory</a>
			</td>
			<td>Player start inventory manager</td>
		</tr>
		<tr>
			<td><a href="CTextMenuItem.htm">CTextMenuItem</a>
			</td>
			<td>Text menu item. Do not store handles to this object.</td>
		</tr>
		<tr>
			<td><a href="CTextMenu.htm">CTextMenu</a>
			</td>
			<td>Text menu.</td>
		</tr>
		<tr>
			<td><a href="CTextMenus.htm">CTextMenus</a>
			</td>
			<td>Text menu manager.</td>
		</tr>
		<tr>
			<td><a href="Vote.htm">Vote</a>
			</td>
			<td>Vote class. Can be used to start custom votes.</td>
		</tr>
		<tr>
			<td><a href="DateTime.htm">DateTime</a>
			</td>
			<td>DateTime class.</td>
		</tr>
		<tr>
			<td><a href="TimeDifference.htm">TimeDifference</a>
			</td>
			<td>Represents the difference between 2 times.</td>
		</tr>
		<tr>
			<td><a href="CAdminControl.htm">CAdminControl</a>
			</td>
			<td>Admin control panel.</td>
		</tr>
		<tr>
			<td><a href="NetworkMessage.htm">NetworkMessage</a>
			</td>
			<td>Network message class. Used to send messages to clients.</td>
		</tr>
		<tr>
			<td><a href="CLog.htm">CLog</a>
			</td>
			<td>This class can log data to the Angelscript log file.</td>
		</tr>
		<tr>
			<td><a href="CCommand.htm">CCommand</a>
			</td>
			<td>Command arguments.</td>
		</tr>
		<tr>
			<td><a href="CConCommand.htm">CConCommand</a>
			</td>
			<td>Console command class</td>
		</tr>
		<tr>
			<td><a href="CClientCommand.htm">CClientCommand</a>
			</td>
			<td>Client console command class</td>
		</tr>
		<tr>
			<td><a href="CCVar.htm">CCVar</a>
			</td>
			<td>CVar class</td>
		</tr>
		<tr>
			<td><a href="CConCommandSystem.htm">CConCommandSystem</a>
			</td>
			<td>Script console command manager.</td>
		</tr>
		<tr>
			<td><a href="SayParameters.htm">SayParameters</a>
			</td>
			<td>ClientSay parameters</td>
		</tr>
		<tr>
			<td><a href="ItemMapping.htm">ItemMapping</a>
			</td>
			<td>Item mapping for classic mode.</td>
		</tr>
		<tr>
			<td><a href="CClassicMode.htm">CClassicMode</a>
			</td>
			<td>Classic Mode handler</td>
		</tr>
		<tr>
			<td><a href="HealthInfo.htm">HealthInfo</a>
			</td>
			<td>Entity takehealth info</td>
		</tr>
		<tr>
			<td><a href="CBinaryStringBuilder.htm">CBinaryStringBuilder</a>
			</td>
			<td>Binary String Builder</td>
		</tr>
		<tr>
			<td><a href="CSQLite.htm">CSQLite</a>
			</td>
			<td>SQLite</td>
		</tr>
		<tr>
			<td><a href="CSurvivalMode.htm">CSurvivalMode</a>
			</td>
			<td>Survival Mode handler</td>
		</tr>
		<tr>
			<td><a href="CModuleHookManager.htm">CModuleHookManager</a>
			</td>
			<td>Module hook manager</td>
		</tr>
		<tr>
			<td><a href="CScriptInfo.htm">CScriptInfo</a>
			</td>
			<td>Script info object.</td>
		</tr>
		<tr>
			<td><a href="CModule.htm">CModule</a>
			</td>
			<td>Module class.</td>
		</tr>
	</table>
	</div>
</body>
</html>
